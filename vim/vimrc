let g:airgline
set nocompatible

set showmatch
set t_Co=256
set relativenumber
set showmatch
set expandtab
set smarttab
set autoindent
set fileformat=unix
set backspace=2

set splitbelow
set splitright

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Searh settings
set incsearch
set hlsearch
set ignorecase
set smartcase
nmap \q :nohlsearch<CR> " mapping to turn off highlighting

" Status line
set laststatus=2                                    " always show the status line
set statusline=%t\                                  " tail of the filename with space after
set statusline+=%m                                  " modified flag
set statusline+=%r                                  " read only flag
set statusline+=%h\                                 " help flag
set statusline+=%=                                  " left/right separator
set statusline+=[column:%c]                         " current column
set statusline+=[line:%l]                           " current line
set statusline+=[%p%%]                              " percentage through file

" Miscellaneous settings
filetype on
filetype plugin on
filetype plugin indent on
highlight Pmenu ctermfg=blue ctermbg=white
set colorcolumn=81
highlight ColorColumn ctermbg=lightblue
syntax enable
let g:solarized_termcolors = 16
set background=dark
colorscheme solarized

" Places to look for tags
set tags=./.tags,.tags,./tags,tags

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" Scala settings
au BufNewFile, Bufread *.sc*
    \ set tabstop=2
    \ set softtabstop=2
    \ set shiftwidth=2
    \ set textwidth=99

" vim-scala
let g:scala_sort_across_groups=1
let g:scala_scaladoc_indent = 1

" ensime-vim
autocmd BufWritePost *.scala silent :EnTypeCheck
nnoremap <localleader>t: EnType<CR>

" Python settings
au BufNewFile, BufRead *.py
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=79

" C Settings
au BufNewFile, BufRead *.c
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=79

""" NERDTree Settings
map <C-n> :NERDTreeToggle<CR>

" All nerdtree to modify files
set modifiable
let g:NERDTreeWinWize = 60

" Start nerdtree by default
autocmd vimenter * NERDTree

" Open NERDTree automatically when vim starts and no files specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" Open NERDTree when opening a directory
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" Close NERDTree if it is the only window remaining
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" CtrlP Settings
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_by_filename = 1 " search by file name not path

" python-mode settings
set completeopt=menu
let g:pymode_lint_cwindow = 0
let g:pymode_rope = 1

" Airline settings
let g:airline#extensions#tmuxline#enabled = 1
let g:airline_powerline_fonts = 1
